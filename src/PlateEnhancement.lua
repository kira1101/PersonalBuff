---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by kira1101.
--- DateTime: 2020/9/10 下午 12:46
---
local iconFrameTable = {}
local BuffIcons,eventFrame
local enabledSpell
local updateTicker,updateTracker
local playerInfo = { }
local WarriorSpells = {
    23920, 190456, 97463, 18499, 132404, 32216, 118038, 7384, 260708,
    107574, 248622, 184362, 1719, 275672, 335082, 871, 12975, 184364,
}
local PaladinSpells = {
    132403, 1022, 32223, 465, 183435, 1044, 642, 31884, 31821, 498,
    54149, 214202, 105809, 216331, 210391, 31850, 86659, 280373, 204018,
    105809, 184662, 269571, 231895, 223819, 209785,
}
HunterSpells = {
    186257, 186258, 186265, 5384, 199483, 193530, 19574, 268877,
    257946, 272790,288613, 257622, 260242, 260402, 193534, 194594,
    266779, 186289, 259388,
}
local RogueSpells = {
    1966, 31224, 315496, 2823, 3408, 8679, 11327, 1784, 114018, 185311,
    2983, 315584, 193538, 108211, 256735, 199600, 193357, 193356, 193358,
    193359, 199603, 13877, 13750, 198368, 195627, 121471, 185422, 213981, 212283,
}

local PriestSpells = {
    19236, 17, 586, 213602, 33206, 81782, 121557, 47788, 41635, 215769,
    64844, 200183, 321379, 213610, 289655, 329543, 77489, 47585, 15286,
    247776, 194249,
}
local DeathKnightSpells = {
}
local ShamanSpells = {
}

local MageSpells = {
}

local WarlockSpells = {
    104773, 48018, 333889, 5697, 108416, 113860, 196099, 205146,108416,
    117828, 266030, 113858,
}

local MonkSpells = {
    101643, 120954, 116841, 132578, 322507, 115176, 116847, 116849, 116680,
    124682, 119611, 191840, 209584, 196725, 202090, 243435, 243435, 125174,
    137639, 152173, 196741,
}
local DruidSpells = {
}
local DemonHunterSpells = {
    188501, 258920, 162264, 212800, 209426, 196555, 208628, 203819, 326863,
    187827, 203981,
}

local function setAuraTime(time,order,duration)
    if time and time~=0 then
        local AuraTime = time - GetTime()
        if duration == 0 then
            if(AuraTime > 60) then
                iconFrameTable[order].timeText1:SetText(math.floor(AuraTime / 60) .. "m")
            elseif (AuraTime > 3) then
                iconFrameTable[order].timeText1:SetText(string.format("%.0f", AuraTime))
            elseif (AuraTime > 0) then
                iconFrameTable[order].timeText1:SetText(string.format("%.1f", AuraTime))
            end
        else
            if(AuraTime > 60) then
                iconFrameTable[order].timeText2:SetText(math.floor(AuraTime / 60) .. "m")
            elseif (AuraTime > 3) then
                iconFrameTable[order].timeText2:SetText(string.format("%.0f", AuraTime))
            elseif (AuraTime > 0) then
                iconFrameTable[order].timeText2:SetText(string.format("%.1f", AuraTime))
            end
        end

    else

    end
end
local function setStackCount(count,sepllID,duration)
    if count ~=0 then
        if duration == 0 then
            iconFrameTable[sepllID].countText1:SetText(count)
        else
            iconFrameTable[sepllID].countText2:SetText(count)
        end
    end
end

local function iconEnable(spellID)
    for _,i in ipairs(enabledSpell) do
        if i == spellID then
            return true
        end
    end
    return false
end


local function setAuraIcon(spellID,time,parent,order,duration,count)

    if iconEnable(spellID) then
        iconFrameTable[spellID]:Show()
        --iconFrameTable[order].texture:SetTexture(GetSpellTexture(spellID))
        iconFrameTable[spellID]:SetPoint("LEFT", order*20 + order,0)
        iconFrameTable[spellID].coolDown:SetCooldown(time - duration,duration)
        setAuraTime(time,spellID,duration)
        setStackCount(count,spellID,duration)

        return true
    else
        return false
    end
end

local function checkForDuplicateIcon(SpellID,iconTable)
    for _,iconID in ipairs(iconTable) do
        if SpellID == iconID then
            return true
        end
    end
    return false
end

local function freeIconFrame()

    for _,i in ipairs(enabledSpell) do
        iconFrameTable[i]:Hide()
        iconFrameTable[i].coolDown:Clear()
        iconFrameTable[i].timeText1:SetText(nil)
        iconFrameTable[i].countText1:SetText("")
        iconFrameTable[i].timeText2:SetText(nil)
        iconFrameTable[i].countText2:SetText("")
    end
end
local function updateAura()
    local iconCount = 1
    local iconTable = {}

    freeIconFrame()

    for i=1,40 do
        local aura = {UnitAura("player",i)}
        if aura and (aura[7] == "player" or aura[7] == "pet") then
            if setAuraIcon(aura[10],aura[6], BuffIcons,iconCount,aura[5],aura[3]) == true then
                iconTable[iconCount] = aura[10]
                iconCount = iconCount + 1
            end
        else
            break
        end
    end

    for i=1,40 do
        local aura = {UnitAura("pet",i)}
        if aura and (aura[7] == "player" or aura[7] == "pet") then
            if checkForDuplicateIcon(aura[10],iconTable) == false then
                if setAuraIcon(aura[10],aura[6], BuffIcons,iconCount,aura[5],aura[3]) == true then
                    iconCount = iconCount + 1
                end
            end
        else
            break
        end
    end

end

local function InitializeDB()
    local defaultSettings = {
        global = {
            hideBlizzardAuras = true,
            iconSize = 20,
            spells = {
                ['*'] = {
                enabled = false,
                },
            }
        },
        char = {
            enabledSpell = {
                ['*'] = true,
                [32223] = false,
                [465] = false,
                [183435] = false,
                [210391] = false,
                [315584] = false,
                [3408] = false,
                [108211] = false,
                [2823] = false,
                [8679] = false,
                [48018] = false,
                [333889] = false,
                [5697] = false,
                [196099] = false,
                [145629] = false,
                [3714] = false,
            },
        }
    }
    aceDB = LibStub("AceDB-3.0"):New("PlateEnhancementAceDB", defaultSettings)
end

local function hideBlizzardAuras()
    if C_NamePlate.GetNamePlateForUnit("player", issecure()) ~= nil then
        C_NamePlate.GetNamePlateForUnit("player", issecure()).UnitFrame.BuffFrame:Hide()
    end
end

local function loadEnableSpell()
    enabledSpell = {}
    for _,i in ipairs(playerInfo.classSpells) do
        if aceDB.char.enabledSpell[i] == true then
            table.insert(enabledSpell,i)
        end
    end
end

local function getPlayerInfo()
    local _,_,ID = UnitClass("player")
    if ID == 1 then
        playerInfo.classSpells = WarriorSpells
    elseif ID == 2 then
        playerInfo.classSpells = PaladinSpells
    elseif ID == 3 then
        playerInfo.classSpells = HunterSpells
    elseif ID == 4 then
        playerInfo.classSpells = RogueSpells
    elseif ID == 5 then
        playerInfo.classSpells = PriestSpells
    elseif ID == 6 then
        playerInfo.classSpells = DeathKnightSpells
    elseif ID == 7 then
        playerInfo.classSpells = ShamanSpells
    elseif ID == 8 then
        playerInfo.classSpells = MageSpells
    elseif ID == 9 then
        playerInfo.classSpells = WarlockSpells
    elseif ID == 10 then
        playerInfo.classSpells = MonkSpells
    elseif ID == 11 then
        playerInfo.classSpells = DruidSpells
    elseif ID == 12 then
        playerInfo.classSpells = DemonHunterSpells
    end
end

local function OnUpdate()
    hideBlizzardAuras()
    updateAura()
    if  C_NamePlate.GetNamePlateForUnit("player", issecure()) == nil and updateTracker == true then
        freeIconFrame()
        updateTracker = false
        updateTicker:Cancel()
    end

end

local function namePlateUpdate()

    if  C_NamePlate.GetNamePlateForUnit("player", issecure()) ~= nil and updateTracker == false then
        BuffIcons:SetPoint("LEFT",C_NamePlate.GetNamePlateForUnit("player", issecure()).UnitFrame.BuffFrame,"LEFT",-21,2)
        loadEnableSpell()
        updateTracker = true
        updateTicker = C_Timer.NewTicker(0.1,OnUpdate)
    end
end

local function createBuffIconsFrame()
    BuffIcons = CreateFrame("Frame",nil,nil)
    BuffIcons:SetSize(200,20)

    for _,i in ipairs(playerInfo.classSpells) do
        iconFrameTable[i] = CreateFrame("Frame",nil,BuffIcons)
        iconFrameTable[i]:SetSize(20,20)


        local Texture = iconFrameTable[i]:CreateTexture(nil,"ARTWORK")
        Texture:SetPoint("CENTER")
        Texture:SetSize(20,20)
        Texture:SetTexture(GetSpellTexture(i))
        iconFrameTable[i].texture = Texture

        local coolDown = CreateFrame("CoolDown", nil, iconFrameTable[i], "CooldownFrameTemplate")
        coolDown:SetAllPoints(Texture)
        coolDown.noCooldownCount = true
        iconFrameTable[i].coolDown = coolDown

        local timeText1 = iconFrameTable[i]:CreateFontString(nil, "OVERLAY")
        timeText1:SetFont("Fonts\\bKAI00M.TTF", 8, "OUTLINE")
        timeText1:SetPoint("CENTER", 0, 0)
        iconFrameTable[i].timeText1 = timeText1

        local countText1 = iconFrameTable[i]:CreateFontString(nil, "OVERLAY")
        countText1:SetFont("Fonts\\bKAI00M.TTF", 6, "OUTLINE")
        countText1:SetPoint("BOTTOMRIGHT", 0, 0)
        iconFrameTable[i].countText1 = countText1

        local timeText2 = coolDown:CreateFontString(nil, "OVERLAY")
        timeText2:SetFont("Fonts\\bKAI00M.TTF", 8, "OUTLINE")
        timeText2:SetPoint("CENTER", 0, 0)
        iconFrameTable[i].timeText2 = timeText2

        local countText2 = coolDown:CreateFontString(nil, "OVERLAY")
        countText2:SetFont("Fonts\\bKAI00M.TTF", 6, "OUTLINE")
        countText2:SetPoint("BOTTOMRIGHT", 0, 0)
        iconFrameTable[i].countText2 = countText2
    end
end

local function EventHandler(self, event,...)
    if event == "PLAYER_ENTERING_WORLD" then
        InitializeDB()
        getPlayerInfo()
        loadEnableSpell()
        createBuffIconsFrame()

    elseif event == "NAME_PLATE_UNIT_REMOVED" then
        if  C_NamePlate.GetNamePlateForUnit("player", issecure()) == nil then
            freeIconFrame()
        end
    else
        namePlateUpdate()
    end
end

local function registerAuraEvent()
    eventFrame = CreateFrame("Frame")
    eventFrame:RegisterEvent("NAME_PLATE_UNIT_ADDED")
    eventFrame:RegisterEvent("NAME_PLATE_UNIT_REMOVED")
    eventFrame:RegisterEvent("UNIT_AURA")
    eventFrame:RegisterEvent("PLAYER_ENTERING_WORLD")
    eventFrame:SetScript("OnEvent", EventHandler)
end

registerAuraEvent()
updateTracker = false

